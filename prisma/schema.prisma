// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// prisma/schema.prisma
datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  email         String    @unique
  password      String
  nama          String
  nohandphone   String
  alamat        String?
  profilePicture String   @default("/defaultprofile.png")
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  history        History[]
  cart          Cart?
}

model Product {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Float
  description String?
  category    String
  image       String?
  netto       String      
  stock       Int         @default(0)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  historyItems  HistoryItem[]
  cartItems   CartItem[]
}

model History {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  userId      String      @db.ObjectId
  status      Status      @default(SEDANG_DIPROSES)
  totalAmount Float
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  items       HistoryItem[]
  user        User        @relation(fields: [userId], references: [id])
}

model HistoryItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  historyId   String   @db.ObjectId
  productId String   @db.ObjectId
  name      String
  price     Float
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  history     History    @relation(fields: [historyId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model Cart {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  userId    String     @unique @db.ObjectId
  items     CartItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
}

model CartItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  cartId    String   @db.ObjectId
  productId String   @db.ObjectId
  quantity  Int
  isChecked Boolean  @default(true)
  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

enum Status {
  DITUNDA
  SEDANG_DIPROSES
  DIBATALKAN
}